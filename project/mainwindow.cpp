// mainwindow.cpp
#include "mainwindow.h"
#include "ui_mainwindow.h"
#include <QJsonDocument>
#include <QJsonObject>
#include <QJsonArray>
#include <QMessageBox>
#include <QIcon>
#include <QButtonGroup>
#include "secondwindow.h"
#include "thirdwindow.h"
#include "fourthwindow.h"
#include "fifthwindow.h"
#include "sixthwindow.h"
#include "seventhwindow.h"
MainWindow::MainWindow(QWidget *parent)
    : QMainWindow(parent)
    , ui(new Ui::MainWindow)
    , manager(new QNetworkAccessManager(this))
{
    ui->setupUi(this);

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    setWindowTitle("–ü–æ–≥–æ–¥–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ");
    setWindowIcon(QIcon(":/icons/weather.png"));
    ui->refreshButton->setIcon(QIcon(":/icons/refresh.png"));

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UI –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞ –∏ —Å—Ç–∏–ª—è
    setupGenderStyleUI();

    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤
    connect(ui->refreshButton, &QPushButton::clicked, this, &MainWindow::onRefreshClicked);
    connect(manager, &QNetworkAccessManager::finished, this, &MainWindow::onWeatherDataReceived);
    connect(ui->clothingAdviceButton, &QPushButton::clicked,
            this, &MainWindow::onClothingAdviceClicked);

    // –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ–≥–æ–¥—ã
    fetchWeather("Perm,RU");
}

void MainWindow::setupGenderStyleUI()
{
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ª–∞
    QButtonGroup *genderGroup = new QButtonGroup(this);
    genderGroup->addButton(ui->radioButtonMale, 0);
    genderGroup->addButton(ui->radioButtonFemale, 1);
    ui->radioButtonMale->setChecked(true); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–±—Ä–∞–Ω –º—É–∂—Å–∫–æ–π –ø–æ–ª

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å—Ç–∏–ª—è
    QButtonGroup *styleGroup = new QButtonGroup(this);
    styleGroup->addButton(ui->radioButtonCasual, 0);
    styleGroup->addButton(ui->radioButtonBusiness, 1);
    styleGroup->addButton(ui->radioButtonSport, 2);
    ui->radioButtonCasual->setChecked(true); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–±—Ä–∞–Ω casual —Å—Ç–∏–ª—å

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã UI
    ui->genderGroupBox->setVisible(true);
    ui->styleGroupBox->setVisible(true);
}

MainWindow::~MainWindow()
{
    delete ui;
}

void MainWindow::fetchWeather(const QString &city)
{
    const QString apiKey = "7e8fce33df02242c68a505434b3e83bf";
    const QString url = QString("https://api.openweathermap.org/data/2.5/weather?q=%1&appid=%2&units=metric&lang=ru")
                            .arg(city)
                            .arg(apiKey);

    manager->get(QNetworkRequest(QUrl(url)));
    ui->statusLabel->setText("–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ...");
}

void MainWindow::onWeatherDataReceived(QNetworkReply *reply)
{
    if (reply->error() != QNetworkReply::NoError) {
        QMessageBox::warning(this, "–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ: " + reply->errorString());
        ui->statusLabel->setText("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏");
        reply->deleteLater();
        return;
    }

    const QByteArray data = reply->readAll();
    const QJsonDocument doc = QJsonDocument::fromJson(data);
    const QJsonObject root = doc.object();

    if (!root.contains("main") || !root.contains("weather")) {
        QMessageBox::warning(this, "–û—à–∏–±–∫–∞", "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö");
        ui->statusLabel->setText("–û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö");
        reply->deleteLater();
        return;
    }

    const double temp = root["main"].toObject()["temp"].toDouble();
    const QString desc = root["weather"].toArray()[0].toObject()["description"].toString();
    const int humidity = root["main"].toObject()["humidity"].toInt();

    // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–æ–ª –∏ —Å—Ç–∏–ª—å
    QString gender = ui->radioButtonMale->isChecked() ? "male" : "female";
    QString style;
    if (ui->radioButtonCasual->isChecked()) style = "casual";
    else if (ui->radioButtonBusiness->isChecked()) style = "business";
    else style = "sport";

    displayWeather(temp, desc, humidity, gender, style);
    ui->statusLabel->setText("–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã: " + QDateTime::currentDateTime().toString("hh:mm:ss"));

    reply->deleteLater();
}

void MainWindow::displayWeather(double temp, const QString &desc, int humidity,
                                const QString &gender, const QString &style)
{
    ui->cityLabel->setText("–¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞ –≤ –ü–µ—Ä–º–∏");
    ui->tempLabel->setText(QString("%1 ¬∞C").arg(temp, 0, 'f', 1));
    ui->descLabel->setText(desc);
    ui->humidityLabel->setText(QString("–í–ª–∞–∂–Ω–æ—Å—Ç—å: %1%").arg(humidity));

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∏–∫–æ–Ω–∫–∏ –ø–æ–≥–æ–¥—ã
    if (desc.contains("–¥–æ–∂–¥—å", Qt::CaseInsensitive)) {
        ui->weatherIcon->setPixmap(QPixmap(":/icons/rain.png"));
    } else if (desc.contains("–æ–±–ª–∞—á–Ω–æ", Qt::CaseInsensitive)) {
        ui->weatherIcon->setPixmap(QPixmap(":/icons/cloudy.png"));
    } else {
        ui->weatherIcon->setPixmap(QPixmap(":/icons/sunny.png"));
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–¥–µ–∂–¥–µ —Å —É—á–µ—Ç–æ–º –ø–æ–ª–∞ –∏ —Å—Ç–∏–ª—è
    ui->clothingLabel->setText(suggestClothing(temp, desc, humidity, gender, style));
}

QString MainWindow::suggestClothing(double temp, const QString &desc, int humidity,
                                    const QString &gender, const QString &style)
{
    QString clothingAdvice;
    QString baseClothing;

    // –ë–∞–∑–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ —Å —É—á–µ—Ç–æ–º –ø–æ–ª–∞
    if (temp < 0) {
        baseClothing = "‚ùÑÔ∏è –û—á–µ–Ω—å —Ç–µ–ø–ª–∞—è –æ–¥–µ–∂–¥–∞: ";
        if (gender == "male") {
            baseClothing += "–∑–∏–º–Ω—è—è –∫—É—Ä—Ç–∫–∞, —Ç–µ–ø–ª—ã–µ –±—Ä—é–∫–∏, ";
        } else {
            baseClothing += "–ø—É—Ö–æ–≤–∏–∫, —Ç–µ–ø–ª—ã–µ –±—Ä—é–∫–∏ –∏–ª–∏ —é–±–∫–∞ —Å —Ç–µ–ø–ª—ã–º–∏ –∫–æ–ª–≥–æ—Ç–∫–∞–º–∏, ";
        }
        baseClothing += "—à–∞–ø–∫–∞, —à–∞—Ä—Ñ, –≤–∞—Ä–µ–∂–∫–∏, —Ç–µ–ø–ª–∞—è –æ–±—É–≤—å.";
    } else if (temp < 10) {
        baseClothing = "‚õÑ –¢–µ–ø–ª–∞—è –æ–¥–µ–∂–¥–∞: ";
        if (gender == "male") {
            baseClothing += "–ø—É—Ö–æ–≤–∏–∫ –∏–ª–∏ –¥–µ–º–∏—Å–µ–∑–æ–Ω–Ω–∞—è –∫—É—Ä—Ç–∫–∞, –±—Ä—é–∫–∏, ";
        } else {
            baseClothing += "—Ç–µ–ø–ª–æ–µ –ø–∞–ª—å—Ç–æ, –±—Ä—é–∫–∏ –∏–ª–∏ —é–±–∫–∞ —Å –∫–æ–ª–≥–æ—Ç–∫–∞–º–∏, ";
        }
        baseClothing += "—à–∞–ø–∫–∞, –ø–µ—Ä—á–∞—Ç–∫–∏.";
    } else if (temp < 15) {
        baseClothing = "üçÇ –õ–µ–≥–∫–∞—è –∫—É—Ä—Ç–∫–∞ –∏–ª–∏ —Ç–µ–ø–ª—ã–π —Å–≤–∏—Ç–µ—Ä, ";
        if (gender == "male") {
            baseClothing += "–¥–∂–∏–Ω—Å—ã –∏–ª–∏ –±—Ä—é–∫–∏, ";
        } else {
            baseClothing += "–¥–∂–∏–Ω—Å—ã –∏–ª–∏ —é–±–∫–∞ —Å –∫–æ–ª–≥–æ—Ç–∫–∞–º–∏, ";
        }
        baseClothing += "–∑–∞–∫—Ä—ã—Ç–∞—è –æ–±—É–≤—å.";
    } else if (temp < 20) {
        baseClothing = "üå§Ô∏è –õ–µ–≥–∫–∞—è –∫—É—Ä—Ç–∫–∞ –∏–ª–∏ –∫–æ—Ñ—Ç–∞, ";
        if (gender == "male") {
            baseClothing += "–¥–∂–∏–Ω—Å—ã –∏–ª–∏ –±—Ä—é–∫–∏, ";
        } else {
            baseClothing += "–¥–∂–∏–Ω—Å—ã, —é–±–∫–∞ –∏–ª–∏ –ø–ª–∞—Ç—å–µ, ";
        }
        baseClothing += "–∑–∞–∫—Ä—ã—Ç–∞—è –æ–±—É–≤—å.";
    } else {
        baseClothing = "‚òÄÔ∏è –õ–µ–≥–∫–∞—è –æ–¥–µ–∂–¥–∞: ";
        if (gender == "male") {
            baseClothing += "—Ñ—É—Ç–±–æ–ª–∫–∞, —à–æ—Ä—Ç—ã –∏–ª–∏ –ª–µ–≥–∫–∏–µ –±—Ä—é–∫–∏, ";
        } else {
            baseClothing += "—Ñ—É—Ç–±–æ–ª–∫–∞ –∏–ª–∏ —Ç–æ–ø, —à–æ—Ä—Ç—ã/—é–±–∫–∞/–ø–ª–∞—Ç—å–µ, ";
        }
        baseClothing += "—Å–∞–Ω–¥–∞–ª–∏–∏ –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç–∞—è –æ–±—É–≤—å.";
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–µ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å —É—á–µ—Ç–æ–º –ø–æ–ª–∞
    QString styleAdvice;
    if (style == "business") {
        if (gender == "male") {
            if (temp < 10) {
                styleAdvice = "\nüëî –î–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å: —Ç–µ–ø–ª—ã–π –∫–æ—Å—Ç—é–º, –ø–∞–ª—å—Ç–æ, –∫–æ–∂–∞–Ω—ã–µ –ø–µ—Ä—á–∞—Ç–∫–∏, –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –±–æ—Ç–∏–Ω–∫–∏.";
            } else if (temp < 20) {
                styleAdvice = "\nüëî –î–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å: –∫–æ—Å—Ç—é–º –∏–ª–∏ –±–ª–µ–π–∑–µ—Ä —Å –±—Ä—é–∫–∞–º–∏, —Ä—É–±–∞—à–∫–∞ —Å –≥–∞–ª—Å—Ç—É–∫–æ–º.";
            } else {
                styleAdvice = "\nüëî –î–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å: —Ä—É–±–∞—à–∫–∞ —Å –∫–æ—Ä–æ—Ç–∫–∏–º —Ä—É–∫–∞–≤–æ–º, —Å–≤–µ—Ç–ª—ã–µ –±—Ä—é–∫–∏, –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —Ç—É—Ñ–ª–∏.";
            }
        } else { // female
            if (temp < 10) {
                styleAdvice = "\nüëî –î–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å: —Ç–µ–ø–ª—ã–π –∫–æ—Å—Ç—é–º –∏–ª–∏ –ø–∞–ª—å—Ç–æ, –±—Ä—é–∫–∏ –∏–ª–∏ —é–±–∫–∞ —Å —Ç–µ–ø–ª—ã–º–∏ –∫–æ–ª–≥–æ—Ç–∫–∞–º–∏, —Å–∞–ø–æ–≥–∏.";
            } else if (temp < 20) {
                styleAdvice = "\nüëî –î–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å: –∫–æ—Å—Ç—é–º –∏–ª–∏ –±–ª–µ–π–∑–µ—Ä —Å –±—Ä—é–∫–∞–º–∏/—é–±–∫–æ–π, –±–ª—É–∑–∫–∞.";
            } else {
                styleAdvice = "\nüëî –î–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å: –±–ª—É–∑–∫–∞, —é–±–∫–∞ –∏–ª–∏ –±—Ä—é–∫–∏, –ª–µ–≥–∫–∏–µ —Ç—É—Ñ–ª–∏.";
            }
        }
    } else if (style == "sport") {
        if (temp < 10) {
            styleAdvice = "\nüèÉ –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π —Å—Ç–∏–ª—å: —Ç–µ—Ä–º–æ–±–µ–ª—å–µ, —Å–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –∫—É—Ä—Ç–∫–∞, —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –±—Ä—é–∫–∏, –∫—Ä–æ—Å—Å–æ–≤–∫–∏.";
        } else if (temp < 20) {
            styleAdvice = "\nüèÉ –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π —Å—Ç–∏–ª—å: —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∫–æ—Å—Ç—é–º –∏–ª–∏ –≤–µ—Ç—Ä–æ–≤–∫–∞, —Ñ—É—Ç–±–æ–ª–∫–∞.";
        } else {
            styleAdvice = "\nüèÉ –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π —Å—Ç–∏–ª—å: —Ñ—É—Ç–±–æ–ª–∫–∞, —à–æ—Ä—Ç—ã, –∫—Ä–æ—Å—Å–æ–≤–∫–∏.";
        }
    } else { // casual
        if (gender == "male") {
            if (temp < 10) {
                styleAdvice = "\nüëï –ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π —Å—Ç–∏–ª—å: —Å–≤–∏—Ç–µ—Ä, –¥–∂–∏–Ω—Å—ã, —É–¥–æ–±–Ω–∞—è –æ–±—É–≤—å, –∫—É—Ä—Ç–∫–∞.";
            } else if (temp < 20) {
                styleAdvice = "\nüëï –ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π —Å—Ç–∏–ª—å: —Ä—É–±–∞—à–∫–∞ –∏–ª–∏ —Ñ—É—Ç–±–æ–ª–∫–∞ —Å –¥–∂–∏–Ω—Å–∞–º–∏, –ª–µ–≥–∫–∞—è –∫—É—Ä—Ç–∫–∞.";
            } else {
                styleAdvice = "\nüëï –ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π —Å—Ç–∏–ª—å: –º–∞–π–∫–∞, —à–æ—Ä—Ç—ã, —Å–∞–Ω–¥–∞–ª–∏–∏.";
            }
        } else { // female
            if (temp < 10) {
                styleAdvice = "\nüëï –ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π —Å—Ç–∏–ª—å: —Å–≤–∏—Ç–µ—Ä, –¥–∂–∏–Ω—Å—ã –∏–ª–∏ —é–±–∫–∞ —Å –∫–æ–ª–≥–æ—Ç–∫–∞–º–∏, —É–¥–æ–±–Ω–∞—è –æ–±—É–≤—å.";
            } else if (temp < 20) {
                styleAdvice = "\nüëï –ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π —Å—Ç–∏–ª—å: —Ñ—É—Ç–±–æ–ª–∫–∞ –∏–ª–∏ –±–ª—É–∑–∫–∞ —Å –¥–∂–∏–Ω—Å–∞–º–∏/—é–±–∫–æ–π, –∫–∞—Ä–¥–∏–≥–∞–Ω.";
            } else {
                styleAdvice = "\nüëï –ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π —Å—Ç–∏–ª—å: —Ç–æ–ø, —à–æ—Ä—Ç—ã/—é–±–∫–∞/–ø–ª–∞—Ç—å–µ, —Å–∞–Ω–¥–∞–ª–∏–∏.";
            }
        }
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ—Å–∞–¥–∫–∞–º
    QString precipitationAdvice;
    if (desc.contains("–¥–æ–∂–¥—å", Qt::CaseInsensitive)) {
        precipitationAdvice = "\nüåßÔ∏è –í–æ–∑—å–º–∏—Ç–µ –∑–æ–Ω—Ç –∏ –Ω–∞–¥–µ–Ω—å—Ç–µ –Ω–µ–ø—Ä–æ–º–æ–∫–∞–µ–º—É—é –æ–±—É–≤—å!";
        if (style == "business") precipitationAdvice += " –ü–æ–¥–æ–π–¥–µ—Ç –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π —Å–∫–ª–∞–¥–Ω–æ–π –∑–æ–Ω—Ç.";
    } else if (desc.contains("—Å–Ω–µ–≥", Qt::CaseInsensitive)) {
        precipitationAdvice = "\n‚ùÑÔ∏è –ù–∞–¥–µ–Ω—å—Ç–µ –∑–∏–º–Ω—é—é –æ–±—É–≤—å —Å –Ω–µ—Å–∫–æ–ª—å–∑—è—â–µ–π –ø–æ–¥–æ—à–≤–æ–π!";
    }

    // –£—á–µ—Ç –≤–ª–∞–∂–Ω–æ—Å—Ç–∏
    QString humidityAdvice;
    if (humidity > 80) {
        if (temp < 10) {
            humidityAdvice = "\nüíß –í—ã—Å–æ–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å —É—Å–∏–ª–∏–≤–∞–µ—Ç —Ö–æ–ª–æ–¥ - –æ–¥–µ–Ω—å—Ç–µ—Å—å —Ç–µ–ø–ª–µ–µ!";
        } else if (temp > 20) {
            humidityAdvice = "\nüí¶ –í—ã—Å–æ–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å –¥–µ–ª–∞–µ—Ç –∂–∞—Ä—É –±–æ–ª–µ–µ –¥—É—à–Ω–æ–π - –≤—ã–±–∏—Ä–∞–π—Ç–µ –¥—ã—à–∞—â–∏–µ —Ç–∫–∞–Ω–∏.";
            if (style == "business") {
                if (gender == "male") {
                    humidityAdvice += " –õ—É—á—à–µ –ø–æ–¥–æ–π–¥–µ—Ç –ª—å–Ω—è–Ω–∞—è –∏–ª–∏ —Ö–ª–æ–ø–∫–æ–≤–∞—è —Ä—É–±–∞—à–∫–∞.";
                } else {
                    humidityAdvice += " –õ—É—á—à–µ –ø–æ–¥–æ–π–¥–µ—Ç –ª–µ–≥–∫–∞—è –±–ª—É–∑–∫–∞ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —Ç–∫–∞–Ω–µ–π.";
                }
            }
        }
    }

    // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≤–º–µ—Å—Ç–µ
    clothingAdvice = baseClothing + styleAdvice + precipitationAdvice + humidityAdvice;

    return clothingAdvice;
}
void MainWindow::onClothingAdviceClicked()
{
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø–æ–≥–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    double temp = ui->tempLabel->text().replace(" ¬∞C", "").toDouble();
    QString desc = ui->descLabel->text();
    int humidity = ui->humidityLabel->text().replace("–í–ª–∞–∂–Ω–æ—Å—Ç—å: ", "").replace("%", "").toInt();

    // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–æ–ª –∏ —Å—Ç–∏–ª—å
    QString gender = ui->radioButtonMale->isChecked() ? "male" : "female";
    QString style;
    if (ui->radioButtonCasual->isChecked()) style = "casual";
    else if (ui->radioButtonBusiness->isChecked()) style = "business";
    else style = "sport";

    // –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
    QMessageBox adviceBox;
    adviceBox.setWindowTitle("–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–¥–µ–∂–¥–µ");
    adviceBox.setText(suggestClothing(temp, desc, humidity, gender, style));
    adviceBox.setIconPixmap(ui->weatherIcon->pixmap());
    adviceBox.exec();
}
void MainWindow::on_pushButton_clicked()
{
    if (ui->radioButtonMale->isChecked() && ui->radioButtonBusiness->isChecked())
    {
        SecondWindow window;
        window.setModal(true);
        window.exec();
    }
    if (ui->radioButtonMale->isChecked() && ui->radioButtonSport->isChecked())
    {
        ThirdWindow window;
        window.setModal(true);
        window.exec();
    }
    if (ui->radioButtonMale->isChecked() && ui->radioButtonCasual->isChecked())
    {
        FourthWindow window;
        window.setModal(true);
        window.exec();
    }
    if (ui->radioButtonFemale->isChecked() && ui->radioButtonBusiness->isChecked())
    {
        FifthWindow window;
        window.setModal(true);
        window.exec();
    }
    if (ui->radioButtonFemale->isChecked() && ui->radioButtonSport->isChecked())
    {
        SixthWindow window;
        window.setModal(true);
        window.exec();
    }
    if (ui->radioButtonFemale->isChecked() && ui->radioButtonCasual->isChecked())
    {
        SeventhWindow window;
        window.setModal(true);
        window.exec();
    }
}
void MainWindow::onRefreshClicked()
{
    fetchWeather("Perm,RU");
}

